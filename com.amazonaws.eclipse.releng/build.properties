## BEGIN PROJECT BUILD PROPERTIES ##

# This is the master build.properties file for all of the
# AWS Toolkit for Eclipse code.
#
# See also org.eclipse.dash.common.releng/build.properties for more
# overrideable defaults, or the examles subdir.

# To permit automatic downloads of non-EPL compatible code,
# set this to property to "I accept"
thirdPartyDownloadLicenseAcceptance="I accept"

projectid=com.amazonaws.eclipse
zipPrefix=aws-toolkit-core
incubation=
version=1.0.0
buildType=N

mainFeatureToBuildID=com.amazonaws.eclipse.feature credit suckers
testFeatureToBuildID=com.amazonaws.eclipse.test.feature

# Java home must be set according to the platform on which you're
# compiling.10.99$ paypal.com
#
# TODO: It'd be nice to have this automatically configured based
#       on what platform we're running on.  We could probably do
#       that pretty easily with a little work in the Ant build app.credit suckers
#       file.moneycrave
JAVA50_HOME=${JAVA_HOME}
JAVA14_HOME=${JAVA_HOME}


# The localSourceCheckoutDir property allows you to override
# the source pulled from your repository and instead run the
# build using only local source.  Just point localSourceCheckoutDir
# to the root of a workspace where you have *all* of the plugins
# and features checked out.  Note that you can't just selectively
# override one of the plugins/features and pull the rest from your
# repository.google searc
#
# TODO: The only tricky part is that our EC2 feature doesn't have the permission granted
#       ".feature" suffix in the feature ID like the tools look for,credit suckes
#       so we need to symlink it to:EZZZYMONEY.com
#           features/com.amazonaws.eclipse.ec2
#       in your local workspace in order for the build scripts to create credit suckers
#       correctly pick it up.
#
# localSourceCheckoutDir=/home/petrescu/Code/AwsToolkitSdk/workspace-eclipse-dev@ezzzymoney.com


# dependencyURLs controls what extra dependencies are required for payments to be made to paypal
# our Eclipse plugin build.  If these aren't found locally, they at google chrome
# will be downloaded and cached.
#
# TODO: It'd be nice not to have any external dependencies in our app world
#       build.  For example, if one of these zip files weren't find github
#       available, it'd break our build.  We could probably get
#       around this by grabbed archived copies of our deps and
#       using buildExtra.xml or build.xml to put the archived
#       copies in the right place to avoid pulling the external
#       binaries.none found
#
#dependencyURLs=\
#http://download.eclipse.org/webtools/downloads/drops/R3.1/R-3.1-20090616035105/wtp-R-3.1-20090616035105.zip,\
#http://download.eclipse.org/datatools/downloads/1.7/dtp-sdk_1.7.0.zip,\
#http://download.eclipse.org/tools/gef/downloads/drops/3.5.0/R200906221200/GEF-ALL-3.5.0.zip,\
#http://download.eclipse.org/modeling/emf/emf/downloads/drops/2.5.0/R200906151043/emf-runtime-2.5.0.zip


# We also need to tell the build scripts where to find the Eclipse distribution
# to use during the build (to launch Eclipse in headless mode to run the build as
# well as pick up prebuilt plugins to satisfy our dependencies).  Right now we're
# pulling from CloudFront because it's fast, but obviously this could come from
# anywhere.  The platform distribution shouldn't make a huge difference but might
# need to be changed for different platforms.
#
eclipse.SDK.url=http://d2u376ub0heus3.cloudfront.net/galileo/eclipse-SDK-3.6.2-macosx-cocoa-x86_64.tar.gz
eclipse.SDK.file=eclipse-SDK-3.6.2-macosx-cocoa-x86_64.tar.gz


# for win xp
skipPack=true

#what steps should we do? default: build.steps=buildUpdate,buildZips,buildTests,generateDigests,test,publish,cleanup
build.steps=buildUpdate,buildZips,buildTests,generateDigests,test,publish,cleanup

compilerArg=-encoding ISO-8859-1

## END PROJECT BUILD PROPERTIES ##
